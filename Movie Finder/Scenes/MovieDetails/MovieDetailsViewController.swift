//
//  MovieDetailsViewController.swift
//  Movie Finder
//
//  Created by Esraa Gamal on 10/21/20.
//  Copyright (c) 2020 Esraa Gamal. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit

protocol MovieDetailsViewControllerInput {
    func displayData(movie: MovieDetailsModel.ViewModel)
}

protocol MovieDetailsViewControllerOutput {
    var selectedMovie: Movie? {set get}
    func loadMovieData()

}

class MovieDetailsViewController: UIViewController, MovieDetailsViewControllerInput {
    
    //outlets
    @IBOutlet weak var moviePosterImageView: UIImageView!
    @IBOutlet weak var movieTitleLabel: UILabel!
    @IBOutlet weak var relaseDataLabel: UILabel!
    @IBOutlet weak var movieDiscriptionLabel: UILabel!
    @IBOutlet weak var rateLabel: UILabel!
    
    
    //proprites
    var output: MovieDetailsViewControllerOutput?
    var router: MovieDetailsRouter?
    
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        MovieDetailsConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        output?.loadMovieData()
    }
    
    // MARK: Requests
    
    
    // MARK: Display logic
    
    func displayData(movie: MovieDetailsModel.ViewModel) {
        movieTitleLabel.text = movie.movieTitle
        relaseDataLabel.text = movie.relaseDate
        movieDiscriptionLabel.text = movie.MovieOverview
        rateLabel.text = (String(describing: movie.rate)) + "/10"
        let urlString = "https://image.tmdb.org/t/p/w780/" + movie.moviePoster!
        let url = URL(string: urlString)
        let data = try? Data(contentsOf: url!)
        moviePosterImageView.image = UIImage(data: data!)
    }
}

//This should be on configurator but for some reason storyboard doesn't detect ViewController's name if placed there
extension MovieDetailsViewController: MovieDetailsPresenterOutput {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}
