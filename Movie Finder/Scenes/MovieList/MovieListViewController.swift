//
//  MovieListViewController.swift
//  Movie Finder
//
//  Created by Esraa Gamal on 10/21/20.
//  Copyright (c) 2020 Esraa Gamal. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit

protocol MovieListViewControllerInput {
    func presentData(movies: [MovieListModel.ViewModel])
}

protocol MovieListViewControllerOutput {
    var  searchedMovie: String? {set get}
    func fetchMoviesData()
    func cellForRowAt(indexPath: IndexPath) -> Movie
    func numberOfRowInSection(section: Int) -> Int
    
}

class MovieListViewController: UITableViewController, MovieListViewControllerInput {

    var output: MovieListViewControllerOutput?
    var router: MovieListRouter?
    var movieResults : [MovieListModel.ViewModel] = []
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        MovieListConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        output?.fetchMoviesData()
    }
    
    // MARK: Display logic
    
    func presentData(movies: [MovieListModel.ViewModel]) {
           DispatchQueue.main.async {
//            print(movies)
            self.movieResults = movies
            self.tableView.reloadData()
           }
       }

}

//This should be on configurator but for some reason storyboard doesn't detect ViewController's name if placed there
extension MovieListViewController: MovieListPresenterOutput {
   
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}

//MARK:- UITableView

extension MovieListViewController{
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int
    {
        return output?.numberOfRowInSection(section: section) ?? 0
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell
    {
        let cell = tableView.dequeueReusableCell(withIdentifier: "MovieCell", for: indexPath) as! MovieCell
        let movie = movieResults[indexPath.row]
        cell.setCellWithValues(movie: movie)
        return cell 
    }
}



