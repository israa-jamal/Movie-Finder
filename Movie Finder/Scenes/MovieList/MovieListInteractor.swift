//
//  MovieListInteractor.swift
//  Movie Finder
//
//  Created by Esraa Gamal on 10/21/20.
//  Copyright (c) 2020 Esraa Gamal. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates
import UIKit
protocol MovieListInteractorInput {
    var searchedMovie: String? {set get}
    func fetchMoviesData()
    func cellForRowAt(indexPath: IndexPath) -> Movie
    func numberOfRowInSection(section: Int) -> Int
}

protocol MovieListInteractorOutput {
    func passDataToModeling(movies: [Movie])

}

protocol MovieListDataSource {
       
}

protocol MovieListDataDestination {
    
}

class MovieListInteractor: MovieListInteractorInput, MovieListDataSource, MovieListDataDestination {
 
    var searchedMovie: String?
    var results : [Movie]?
    var output: MovieListInteractorOutput?
    
    var apiWorker = APIWorker()
       func fetchMoviesData(){
            if let movieName = searchedMovie{
            apiWorker.getMovie(movie: movieName) { [weak self] (result) in
                switch result{
                case .success(let listOf):
//                    delegate?.addNewElementToSearchHistory(add: movieName)
                    self?.results = listOf.movies
                    self?.output?.passDataToModeling(movies: (self?.results)!)
                case.failure(let error):
                    print("error processing data\(error)")
                }
            }
            }
        }
    func numberOfRowInSection(section: Int) -> Int{
        if let movieResult = results{
            return movieResult.count
        }
        return 0
    }
    func cellForRowAt(indexPath: IndexPath) -> Movie{
        return (results?[indexPath.row])!
    }
}
