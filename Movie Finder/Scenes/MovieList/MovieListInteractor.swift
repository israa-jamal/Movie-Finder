//
//  MovieListInteractor.swift
//  Movie Finder
//
//  Created by Esraa Gamal on 10/21/20.
//  Copyright (c) 2020 Esraa Gamal. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates
import UIKit
protocol MovieListInteractorInput {
    var searchedMovie: String? {set get}
    var pageNumber: Int {set get}
    var totalPages: Int {set get}
    func fetchMoviesData()
    func cellForRowAt(indexPath: IndexPath) -> Movie
    func numberOfRowInSection(section: Int) -> Int
}

protocol MovieListInteractorOutput {
    func passDataToModeling(movies: [Movie])
    
}

protocol MovieListDataSource {
    
}

protocol MovieListDataDestination {
    
}

class MovieListInteractor: MovieListInteractorInput, MovieListDataSource, MovieListDataDestination {
    
    var searchedMovie: String?
    var results : [Movie] = []
    var output: MovieListInteractorOutput?
    var history = SearchHistory()
    var apiWorker = APIWorker()
    var pageNumber = 1
    var totalPages : Int = 0
    
    func fetchMoviesData(){
        if let movieName = searchedMovie{
            apiWorker.getMovie(page: pageNumber, movie: movieName) { [weak self] (result) in
                switch result{
                case .success(let listOf):
                    self?.results.append(contentsOf: listOf.movies)
                    self?.output?.passDataToModeling(movies: self?.results ?? [])
                    self?.history.addNewElementToSearchHistory(add: movieName)
                    self?.totalPages = listOf.pagesTotal
                    self?.pageNumber += 1
                case.failure(let error):
                    print("error processing data\(error)")
                }
            }
        }
    }
    func numberOfRowInSection(section: Int) -> Int{
        return results.count
        
    }
    func cellForRowAt(indexPath: IndexPath) -> Movie{
        return (results[indexPath.row])
    }
}
